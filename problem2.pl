#Devin Martin
#Perl Solution
#Project Euler Problem: 2
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#

use strict;
use warnings;

#This is an array generator
#Method uses the fact that by shifting and expanding the array
#You can generate fibonacci sequence numbers. 
sub fibo{
	my($x) = @_;
	my $i = 0;

#Main Sequence
	my @fib1 = (0);
#Sequence for Addition
	my @fib2 = (1);

	while ($i < $x){
		push(@fib2, $fib1[$i]+$fib2[$i]);
		push(@fib1, $fib2[$i]);
		$i++;
		}

return $fib1[-1];
}


#Function for problem solution
my $i = 0;
my $fib = 0;
my $fibsum = 0;

while ($fib < 4000000){
	$fib = fibo($i);
	print "$fib\n";
	if ($fib % 2 == 0){$fibsum += $fib;}
	$i++;
	}
print "Fibo sum: $fibsum \n";
